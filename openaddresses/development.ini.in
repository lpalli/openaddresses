#
# openaddresses - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = %DEBUG%
# Uncomment and replace with the address which should receive any error reports
email_to = cedric.moullet@gmail.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 5000

[filter:gzip]
use = egg:Paste#gzip

[app:main]
use = egg:openaddresses
full_stack = %FULL_STACK%
static_files = true
filter-with = gzip

beaker.session.key = openaddresses
beaker.session.secret = OpEnAdDrEsSeS
beaker.cache.type = memory

available_languages = en,fr,de,zh_CN,es,it,ca,mk,pl,hr
lang = en
# URL path of the root, after the domain
root_path = %ROOT_PATH%
# complete URL path of the root, incl the domain
root_path = %ROOT_URL%
# Yahoo key
yahoo_key = %YAHOO_KEY%
# Bing key
bing_key = %BING_KEY%
# Root directory where trunk directory is stored
main_root = %MAIN_ROOT%
mobile_search_url = %MOBILE_SEARCH_URL%

# SQLAlchemy database URL
sqlalchemy.url = %SQLALCHEMY_URL%

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Logging configuration
[loggers]
keys = root, routes, openaddresses, sqlalchemy

[handlers]
keys = wsgierrors

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = wsgierrors

[logger_routes]
level = WARN
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_openaddresses]
level = WARN
handlers =
qualname = openaddresses

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
format = generic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
